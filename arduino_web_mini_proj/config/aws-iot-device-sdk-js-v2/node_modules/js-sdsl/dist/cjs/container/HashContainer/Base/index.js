"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../../ContainerBase/index");
class HashContainerBase extends index_1.Base {
    constructor(initBucketNum = 16, hashFunc = (x) => {
        let hashCode = 0;
        let str;
        if (typeof x !== 'string') {
            str = JSON.stringify(x);
        }
        else
            str = x;
        for (let i = 0; i < str.length; i++) {
            const character = str.charCodeAt(i);
            hashCode = ((hashCode << 5) - hashCode) + character;
            hashCode = hashCode & hashCode;
        }
        hashCode ^= (hashCode >>> 16);
        return hashCode;
    }) {
        super();
        if (initBucketNum < 16 || (initBucketNum & (initBucketNum - 1)) !== 0) {
            throw new RangeError('InitBucketNum range error');
        }
        this.bucketNum = this.initBucketNum = initBucketNum;
        this.hashFunc = hashFunc;
    }
}
HashContainerBase.sigma = 0.75;
HashContainerBase.treeifyThreshold = 8;
HashContainerBase.untreeifyThreshold = 6;
HashContainerBase.minTreeifySize = 64;
HashContainerBase.maxBucketNum = (1 << 30);
exports.default = HashContainerBase;
