import { initContainer } from "../ContainerBase/index";
import HashContainerBase from './Base/index';
declare class HashMap<K, V> extends HashContainerBase<K> {
    private hashTable;
    constructor(container?: initContainer<[K, V]>, initBucketNum?: number, hashFunc?: (x: K) => number);
    private reAllocate;
    clear(): void;
    forEach(callback: (element: [K, V], index: number) => void): void;
    /**
     * Insert a new key-value pair or set value by key.
     */
    setElement(key: K, value: V): void;
    /**
     * Gets the value of the element which has the specified key.
     */
    getElementByKey(key: K): V | undefined;
    /**
     * Removes the element of the specified key.
     */
    eraseElementByKey(key: K): void;
    /**
     * @return If the specified element in the HashSet.
     */
    find(key: K): boolean;
    /**
     * Using for 'for...of' syntax like Array.
     */
    [Symbol.iterator](): Generator<[K, V], void, unknown>;
}
export default HashMap;
