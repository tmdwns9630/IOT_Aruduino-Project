import { initContainer } from "../ContainerBase/index";
import HashContainerBase from './Base/index';
declare class HashSet<K> extends HashContainerBase<K> {
    private hashTable;
    constructor(container?: initContainer<K>, initBucketNum?: number, hashFunc?: (x: K) => number);
    private reAllocate;
    clear(): void;
    forEach(callback: (element: K, index: number) => void): void;
    /**
     * Inserts element to Set.
     */
    insert(element: K): void;
    /**
     * Removes the elements of the specified value.
     */
    eraseElementByKey(element: K): void;
    /**
     * @return If the specified element in the HashSet.
     */
    find(element: K): boolean;
    /**
     * Using for 'for...of' syntax like Array.
     */
    [Symbol.iterator](): Generator<K, void, unknown>;
}
export default HashSet;
